version: '3'
services:
    #PHP Service
    app:
        build:
            context: docker/php
            dockerfile: Dockerfile
        image: laravel/app
        container_name: smartnx_app
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        volumes:
            - ./:/var/www:delegated
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:delegated
            - ~/.composer/docker-cache/:/root/.composer:cached
        networks:
            - smartnx
    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: smartnx_webserver
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www:delegated
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:delegated
        networks:
            - smartnx
        depends_on:
            - postgres
            - app
            - tokudb
            - redis
    postgres:
        image: postgres:13
        container_name: smartnx_postgres
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - "./docker/postgres/import.sql:/docker-entrypoint-initdb.d/import.sql"
        networks:
            - smartnx
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
    tokudb:
        image: percona/percona-server
        container_name: smartnx_tokudb
        ports:
            - "3306:3306"
        volumes:
            - "./docker/percona/enabled:/sys/kernel/mm/transparent_hugepage/enabled"
            - "./docker/percona/tokudb.sql:/docker-entrypoint-initdb.d/tokudb.sql"
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_TOKUDB_ROOT_PASSWORD}'
            MYSQL_DATABASE: '${DB_TOKUDB_DATABASE}'
            MYSQL_USER: '${DB_TOKUDB_USER}'
            MYSQL_PASSWORD: '${DB_TOKUDB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        networks:
            - smartnx
    redis:
        image: 'redis:alpine'
        container_name: 'smartnx_redis'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './docker/redis:/data'
        networks:
            - smartnx
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
networks:
    smartnx:
        driver: bridge
